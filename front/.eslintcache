[{"/home/node/app/src/index.js":"1","/home/node/app/src/App.js":"2","/home/node/app/src/pages/Home.js":"3","/home/node/app/src/layouts/AdminLayout.js":"4","/home/node/app/src/components/Navbar/index.js":"5","/home/node/app/src/components/Navbar/NavItem.js":"6","/home/node/app/src/lib/api.js":"7","/home/node/app/src/components/Cards/GithubCard.js":"8","/home/node/app/src/components/Cards/DataCard.js":"9","/home/node/app/src/components/Cards/ReminderCard.js":"10","/home/node/app/src/components/Cards/InfoCard.js":"11","/home/node/app/src/components/Cards/TrelloCard.js":"12","/home/node/app/src/components/Table/UserTable.js":"13","/home/node/app/src/pages/Users.js":"14","/home/node/app/src/pages/UserProfile.js":"15","/home/node/app/src/components/Cards/ProfileCard.js":"16","/home/node/app/src/components/Cards/MessagesCard.js":"17","/home/node/app/src/components/Cards/MediaCard.js":"18","/home/node/app/src/pages/Graphs.js":"19","/home/node/app/src/components/List.js":"20"},{"size":324,"mtime":1611420029387,"results":"21","hashOfConfig":"22"},{"size":946,"mtime":1611427132615,"results":"23","hashOfConfig":"22"},{"size":2505,"mtime":1611427132615,"results":"24","hashOfConfig":"22"},{"size":294,"mtime":1611420029387,"results":"25","hashOfConfig":"22"},{"size":2722,"mtime":1611427132615,"results":"26","hashOfConfig":"22"},{"size":402,"mtime":1611420029387,"results":"27","hashOfConfig":"22"},{"size":448,"mtime":1611420029387,"results":"28","hashOfConfig":"22"},{"size":1292,"mtime":1611420029387,"results":"29","hashOfConfig":"22"},{"size":755,"mtime":1611420029387,"results":"30","hashOfConfig":"22"},{"size":1802,"mtime":1611427132615,"results":"31","hashOfConfig":"22"},{"size":880,"mtime":1611420029387,"results":"32","hashOfConfig":"22"},{"size":5402,"mtime":1611420029387,"results":"33","hashOfConfig":"22"},{"size":3777,"mtime":1611420029387,"results":"34","hashOfConfig":"22"},{"size":1713,"mtime":1611420029387,"results":"35","hashOfConfig":"22"},{"size":1587,"mtime":1611427132615,"results":"36","hashOfConfig":"22"},{"size":2734,"mtime":1611427132615,"results":"37","hashOfConfig":"22"},{"size":2452,"mtime":1611427132615,"results":"38","hashOfConfig":"22"},{"size":985,"mtime":1611427132615,"results":"39","hashOfConfig":"22"},{"size":1811,"mtime":1611427132615,"results":"40","hashOfConfig":"22"},{"size":745,"mtime":1611427132615,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1l316rl",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/node/app/src/index.js",[],["85","86"],"/home/node/app/src/App.js",[],"/home/node/app/src/pages/Home.js",["87"],"/home/node/app/src/layouts/AdminLayout.js",[],"/home/node/app/src/components/Navbar/index.js",[],"/home/node/app/src/components/Navbar/NavItem.js",[],"/home/node/app/src/lib/api.js",[],"/home/node/app/src/components/Cards/GithubCard.js",[],"/home/node/app/src/components/Cards/DataCard.js",[],"/home/node/app/src/components/Cards/ReminderCard.js",[],"/home/node/app/src/components/Cards/InfoCard.js",[],"/home/node/app/src/components/Cards/TrelloCard.js",["88"],"export default function TrellCard() {\n    return (\n        <div className=\"rounded-lg xl:col-span-3 bg-gray-800\">\n            <h5 className=\"font-semibold px-4 py-2 my-2\">Trello Integration :</h5>\n\n            <div>\n                <span className=\"flex items-center space-x-2 text-sm text-green-800\">\n                    <div className=\"flex px-4 pb-8 items-start overflow-hidden\">\n                        <div className=\"rounded bg-gray-200 flex-no-shrink w-64 p-2 mr-3\">\n                            <div className=\"flex justify-between py-1\">\n                                <h3 className=\"text-sm\">About Users</h3>\n                                <svg\n                                    className=\"h-4 fill-current text-grey-dark cursor-pointer\"\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                    viewBox=\"0 0 24 24\">\n                                    <path d=\"M5 10a1.999 1.999 0 1 0 0 4 1.999 1.999 0 1 0 0-4zm7 0a1.999 1.999 0 1 0 0 4 1.999 1.999 0 1 0 0-4zm7 0a1.999 1.999 0 1 0 0 4 1.999 1.999 0 1 0 0-4z\" />\n                                </svg>\n                            </div>\n                            <div className=\"text-sm mt-2\">\n                                <div className=\"bg-white p-2 rounded mt-1 border-b border-grey cursor-pointer hover:bg-gray-100\">\n                                    Review Users\n                                </div>\n\n                                <div className=\"bg-white p-2 rounded mt-1 border-b border-grey cursor-pointer hover:bg-gray-100\">\n                                    Check disabled Users\n                                </div>\n\n                                <div className=\"bg-white p-2 rounded mt-1 border-b border-grey cursor-pointer hover:bg-gray-100\">\n                                    Differents features about Country and Cities\n                                    <div className=\"text-grey-darker mt-2 ml-2 flex justify-between items-start\">\n                                        <span className=\"text-xs flex items-center\" />\n                                        <a\n                                            target=\"_blank\"\n                                            rel=\"noreferrer\"\n                                            href={'https://github.com/Thisisjuke'}>\n                                            <img\n                                                className={'w-10 h-10 rounded-full'}\n                                                src=\"https://avatars.githubusercontent.com/u/23522065?s=460&u=56b2a38516b36f60ea3a9b176a189d261b6b4ab2&v=4\"\n                                            />\n                                        </a>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"rounded bg-gray-200 flex-no-shrink w-64 p-2 mr-3\">\n                            <div className=\"flex justify-between py-1\">\n                                <h3 className=\"text-sm\">About Chats</h3>\n                                <svg\n                                    className=\"h-4 fill-current text-grey-dark cursor-pointer\"\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                    viewBox=\"0 0 24 24\">\n                                    <path d=\"M5 10a1.999 1.999 0 1 0 0 4 1.999 1.999 0 1 0 0-4zm7 0a1.999 1.999 0 1 0 0 4 1.999 1.999 0 1 0 0-4zm7 0a1.999 1.999 0 1 0 0 4 1.999 1.999 0 1 0 0-4z\" />\n                                </svg>\n                            </div>\n                            <div className=\"text-sm mt-2\">\n                                <div className=\"bg-white p-2 rounded mt-1 border-b border-grey cursor-pointer hover:bg-gray-100\">\n                                    See users Chats\n                                </div>\n                                <div className=\"bg-white p-2 rounded mt-1 border-b border-grey cursor-pointer hover:bg-gray-100\">\n                                    Reconstruct conversations\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"rounded bg-gray-200 flex-no-shrink w-64 p-2 mr-3\">\n                            <div className=\"flex justify-between py-1\">\n                                <h3 className=\"text-sm\">About Media</h3>\n                                <svg\n                                    className=\"h-4 fill-current text-grey-dark cursor-pointer\"\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                    viewBox=\"0 0 24 24\">\n                                    <path d=\"M5 10a1.999 1.999 0 1 0 0 4 1.999 1.999 0 1 0 0-4zm7 0a1.999 1.999 0 1 0 0 4 1.999 1.999 0 1 0 0-4zm7 0a1.999 1.999 0 1 0 0 4 1.999 1.999 0 1 0 0-4z\" />\n                                </svg>\n                            </div>\n                            <div className=\"text-sm mt-2\">\n                                <div className=\"bg-white p-2 rounded mt-1 border-b border-grey cursor-pointer hover:bg-gray-100\">\n                                    Things about Media\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </span>\n            </div>\n        </div>\n    );\n}\n","/home/node/app/src/components/Table/UserTable.js",["89"],"import React from 'react';\n\nimport { useTable, useFilters, useGlobalFilter, useAsyncDebounce } from 'react-table';\n\nfunction GlobalFilter({ preGlobalFilteredRows, globalFilter, setGlobalFilter }) {\n    const count = preGlobalFilteredRows.length;\n    const [value, setValue] = React.useState(globalFilter);\n    const onChange = useAsyncDebounce((value) => {\n        setGlobalFilter(value || undefined);\n    }, 200);\n\n    return (\n        <div className={\"py-4\"}>\n            Search :\n            <input\n                className=\"flex-1 appearance-none rounded shadow py-1 px-3 text-grey-dark ml-2 focus:outline-none\"\n                value={value || ''}\n                onChange={(e) => {\n                    setValue(e.target.value);\n                    onChange(e.target.value);\n                }}\n                placeholder={`Search in ${count} records...`}\n            />\n        </div>\n    );\n}\n\nfunction DefaultColumnFilter({ column: { filterValue, preFilteredRows, setFilter } }) {\n\n    return (\n        <input\n            className=\"border border-purple-600 rounded p-1\"\n            value={filterValue || ''}\n            onChange={(e) => {\n                setFilter(e.target.value || undefined);\n            }}\n            placeholder={`Search...`}\n        />\n    );\n}\n\nfunction Table({ columns, data }) {\n    const defaultColumn = React.useMemo(\n        () => ({\n            Filter: DefaultColumnFilter\n        }),\n        []\n    );\n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n        state,\n        preGlobalFilteredRows,\n        setGlobalFilter\n    } = useTable(\n        {\n            columns,\n            data,\n            defaultColumn\n        },\n        useFilters,\n        useGlobalFilter\n    );\n\n    return (\n        <div>\n            <GlobalFilter\n                preGlobalFilteredRows={preGlobalFilteredRows}\n                globalFilter={state.globalFilter}\n                setGlobalFilter={setGlobalFilter}\n            />\n            <table className=\"table\" {...getTableProps()}>\n                <thead>\n                    {headerGroups.map((headerGroup) => (\n                        <tr {...headerGroup.getHeaderGroupProps()}>\n                            {headerGroup.headers.map((column) => (\n                                <th\n                                    className=\"px-6 py-3 bg-gray-50 text-left text-xs leading-4 font-medium text-gray-500 uppercase tracking-wider\"\n                                    {...column.getHeaderProps()}\n                                >\n                                    {column.render('Header')}\n                                    <div>{column.canFilter ? column.render('Filter') : null}</div>\n                                </th>\n                            ))}\n                        </tr>\n                    ))}\n                </thead>\n                <tbody\n                    className=\"bg-white divide-y divide-gray-200 text-gray-800\"\n                    {...getTableBodyProps()}\n                >\n                    {rows.map((row, i) => {\n                        prepareRow(row);\n                        return (\n                            <tr {...row.getRowProps()}>\n                                {row.cells.map((cell) => {\n                                    return <td className={\"px-2\"} {...cell.getCellProps()}>{cell.render('Cell')}</td>;\n                                })}\n                            </tr>\n                        );\n                    })}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nfunction UserTable({columns, data}) {\n    const cols = React.useMemo(\n        () => columns, []\n    );\n\n    return <Table columns={cols} data={data} />;\n}\n\nexport default UserTable;\n","/home/node/app/src/pages/Users.js",[],"/home/node/app/src/pages/UserProfile.js",["90"],"/home/node/app/src/components/Cards/ProfileCard.js",[],"/home/node/app/src/components/Cards/MessagesCard.js",["91","92"],"/home/node/app/src/components/Cards/MediaCard.js",[],"/home/node/app/src/pages/Graphs.js",[],"/home/node/app/src/components/List.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":14,"column":12,"nodeType":"99","messageId":"100","endLine":14,"endColumn":22},{"ruleId":"101","severity":1,"message":"102","line":36,"column":45,"nodeType":"103","endLine":39,"endColumn":47},{"ruleId":"104","severity":1,"message":"105","line":114,"column":24,"nodeType":"106","endLine":114,"endColumn":26,"suggestions":"107"},{"ruleId":"104","severity":1,"message":"108","line":16,"column":8,"nodeType":"106","endLine":16,"endColumn":10,"suggestions":"109"},{"ruleId":"97","severity":1,"message":"110","line":1,"column":9,"nodeType":"99","messageId":"100","endLine":1,"endColumn":17},{"ruleId":"97","severity":1,"message":"111","line":2,"column":9,"nodeType":"99","messageId":"100","endLine":2,"endColumn":18},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"no-unused-vars","'countMedia' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook React.useMemo has a missing dependency: 'columns'. Either include it or remove the dependency array.","ArrayExpression",["114"],"React Hook useEffect has a missing dependency: 'loadData'. Either include it or remove the dependency array.",["115"],"'useState' is defined but never used.","'fetchData' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},"Update the dependencies array to be: [columns]",{"range":"120","text":"121"},"Update the dependencies array to be: [loadData]",{"range":"122","text":"123"},[3688,3690],"[columns]",[530,532],"[loadData]"]